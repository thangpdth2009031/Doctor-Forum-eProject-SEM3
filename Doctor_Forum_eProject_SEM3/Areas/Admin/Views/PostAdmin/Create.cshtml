@model Doctor_Forum_eProject_SEM3.Models.Post

@{
    ViewBag.Title = "Add Post | Doctor forum";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .zmdi-plus:before {
        content: '\271B';
    }

    A.applink:hover {
        border: 2px dotted #DCE6F4;
        padding: 2px;
        background-color: #ffff00;
        color: green;
        text-decoration: none
    }

    A.applink {
        border: 2px dotted #DCE6F4;
        padding: 2px;
        color: #2F5BFF;
        background: transparent;
        text-decoration: none
    }

    A.info {
        color: #2F5BFF;
        background: transparent;
        text-decoration: none
    }

        A.info:hover {
            color: green;
            background: transparent;
            text-decoration: underline
        }
</style>

<section class="content home p-0">
    <div class="block-header">
        <div class="row">
            <div class="col-lg-5 col-md-5 col-sm-12">
                <h2>Create Post <small class="text-muted">Welcome to Oreo</small></h2>
            </div>
            <div class="col-lg-7 col-md-7 col-sm-12 text-right">

                @*<button class="btn btn-white btn-icon btn-round d-none d-md-inline-block float-right m-l-10" type="button">
                        <i class="zmdi zmdi-plus"></i>
                    </button>*@
                @*

                    <ul class="breadcrumb float-md-right">
                        <li class="breadcrumb-item"><a href="../dashboard/index.html"><i class="fa-solid fa-house"></i>Oreo</a></li>
                        <li class="breadcrumb-item">Doctors</li>
                        <li class="breadcrumb-item active">Add Doctors</li>
                    </ul>*@
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div class="card">
                    @*<div class="header">
                            <h2><strong>Basic</strong> Information <small>Description text here...</small> </h2>
                            <ul class="header-dropdown">
                                <li class="remove">
                                    <a role="button" class="boxs-close"><i class="fa-solid fa-xmark"></i>   </a>
                                </li>
                            </ul>
                        </div>*@
                    <div class="body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.SpecializationId, "SpecializationId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("SpecializationId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.SpecializationId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                        <div>
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>
<!-- Scripts -->
<!--Start of Tawk.to Script-->
<script type="text/javascript">
    var Tawk_API = Tawk_API || {}, Tawk_LoadStart = new Date();
    (function () {
        var s1 = document.createElement("script"), s0 = document.getElementsByTagName("script")[0];
        s1.async = true;
        s1.src = 'https://embed.tawk.to/59f5afbbbb0c3f433d4c5c4c/default';
        s1.charset = 'UTF-8';
        s1.setAttribute('crossorigin', '*');
        s0.parentNode.insertBefore(s1, s0);
    })();
</script>