@model Doctor_Forum_eProject_SEM3.Models.Account
@using Doctor_Forum_eProject_SEM3.Common
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Genders = new SelectList(GenderKey.GetDic(), "Key", "Value");
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<style>
    .status-input {
        padding: 3px;
    }

    #profile {
        width: 200px;
        height: 200px;
        /*   margin: 0 auto;*/
        /* top: -80px; */
        /* margin-bottom: -80px; */
        /* cursor: pointer; */
        background: #f4f4f4;
        /* display: table; */
        background-size: cover;
        position: relative;
        background-position: center center;
        cursor: pointer;
    }
        #profile:before {
            content: "\208A";         
            position: absolute;          
            text-align: center;
            top: 7px;
            left: 84px;
            font-size: 100px;
            color: #cccccc;
        }
</style>
<div class="page-wrapper">
    <div class="page-breadcrumb">
        <div class="row">
            <div class="col-12 d-flex no-block align-items-center">
                <h4 class="page-title">Create Account</h4>
                <div class="ms-auto text-end">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Library
                            </li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Create</h4>
                                <hr />
                                <div class="">
                                             
                                    <div class="row">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="col-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-12">
                                                    <div class="table">
                                                        <div class="table-cell">
                                                            <div class="">
                                                                <div id="profile">
                                                                    <div class="dashes">

                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <input type="file" id="mediaFile" class="d-none filePhoto" />
                                                    @*@Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", id = "mediaFile" }, id = "mediaFile" })*@
                                                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.AddressDetail, htmlAttributes: new { @class = "control-label" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.AddressDetail, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.AddressDetail, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.DistrictId, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ProvinceId, htmlAttributes: new { @class = "control-label" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.ProvinceId, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="row">
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>*@

                                    <div class="row">
                                        <div class="form-group col-md-6">
                                            @Html.LabelFor(model => model.SpecializationId, "SpecializationId", htmlAttributes: new { @class = "control-label" })
                                            <div class="col-md-12">
                                                @Html.DropDownList("SpecializationId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.SpecializationId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                            <div class="col-md-12">
                                                @Html.DropDownList("Gender", (SelectList)ViewBag.Genders, new { @class = "form-control", @required = "required", @style = "padding: 0 15px;" })
                                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status, "", new { @class = "status-input" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>*@

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" id="btnSubmit" class="btn btn-default" />
                                        </div>
                                    </div>
                                    <div>
                                        @Html.ActionLink("Back to List", "Index")
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    // ----- On render -----
    $(function () {

        $('#profile').addClass('dragging').removeClass('dragging');
    });

    $('#profile').on('dragover', function () {
        $('#profile').addClass('dragging')
    }).on('dragleave', function () {
        $('#profile').removeClass('dragging')
    }).on('drop', function (e) {
        $('#profile').removeClass('dragging hasImage');

        if (e.originalEvent) {
            var file = e.originalEvent.dataTransfer.files[0];
            console.log(file);

            var reader = new FileReader();

            //attach event handlers here...

            reader.readAsDataURL(file);
            reader.onload = function (e) {
                console.log(reader.result);
                $('#profile').css('background-image', 'url(' + reader.result + ')').addClass('hasImage');

            }

        }
    })
    $('#profile').on('click', function (e) {
        console.log('clicked')
        $('#mediaFile').click();
    });
    window.addEventListener("dragover", function (e) {
        e = e || event;
        e.preventDefault();
    }, false);
    window.addEventListener("drop", function (e) {
        e = e || event;
        e.preventDefault();
    }, false);
    $('#mediaFile').change(function (e) {

        var input = e.target;
        if (input.files && input.files[0]) {
            var file = input.files[0];

            var reader = new FileReader();

            reader.readAsDataURL(file);
            reader.onload = function (e) {
                console.log(reader.result);
                $('#profile').css('background-image', 'url(' + reader.result + ')').addClass('hasImage');
            }
        }
    })

    $("#btnSubmit").click(function () {
        var fileUpload = $(".filePhoto").get(0);
        var files = fileUpload.files;
        // Create FormData object
        var fileData = new FormData();
        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }
        var geturl = "/Admin/AccountsManage/SaveImageToServer";
        $.ajax({
            url: geturl,
            type: "POST",
            data: fileData,
            async: false,
            contentType: false, // Not to set any content header
            processData: false, // Not to process data
            success: function (IsImageUploaded) {
                if (IsImageUploaded == "True") {
                    $(".filePhoto").val('');
                    $("#ShowMsg").text("Image Uploaded Successfully...!").css("color", "green")
                }
                else {
                    $(".filePhoto").val('');
                    $("#ShowMsg").text("Image Not Uploaded...!").css("color", "red")
                }
            }
        });
    })
</script>