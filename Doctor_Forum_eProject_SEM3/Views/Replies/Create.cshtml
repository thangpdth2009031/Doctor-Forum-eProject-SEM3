@model Doctor_Forum_eProject_SEM3.Models.Reply

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Reply</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParenId, "ParenId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ParenId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ParenId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostId, "PostId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PostId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AccountId, "AccountId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
        </div>
    </div>








    <div class="form-group">
        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" }, id = "txtDescription" })
            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage" })
            <span class="input-group-addon" onclick="ChooseImg()">
                <i class="fa fa-upload fa-lg"></i>
            </span>
        </div>
        <img class="img img-thumbnail" id="Img" src="~/Content/img/5f660a6763af6a0025a73587.jpg" style="height: 150px;width:150px; object-fit:cover" />
        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
    </div>






@*    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Status)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section jsFooter {
    <script>

        function ChooseImg() {
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#Img").attr("src", fileUrl);
                $("#txtImage").val(fileUrl);
            }
            finder.popup();
        }
        var editor = CKEDITOR.replace('txtDescription', {
            customConfig: '/Content/js/plugins/ckeditor/ckeditor.js',
            htmlEncodeOutput: true
        })
        var editor = CKEDITOR.replace('txtBenefits', {
            customConfig: '/Content/js/plugins/ckeditor/ckeditor.js',
            htmlEncodeOutput: true
        })
        function ChooseFile() {
            const finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#UrlDocument").val(fileUrl);
            }
            finder.popup();
        }
        const content = CKEDITOR.instances['txtDescription'].getData();
    </script>
}}